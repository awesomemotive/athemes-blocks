name: Create plugin github release zip

on:
  push:
    tags:
      - "*"

jobs:
  build-plugin-zip-asset:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Setup PHP 8.0
        uses: shivammathur/setup-php@v2
        with:
          php-version: 8.3
          tools: composer

      - name: Install Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '21'

      - name: Install dependencies
        run: composer install --no-dev --ignore-platform-reqs --prefer-dist --no-scripts --optimize-autoloader

      - name: Install nodejs dependencies
        run: npm install

      - name: Generate production build
        run: npm run production

      - name: Install WP-CLI
        run: |
          curl -O https://raw.githubusercontent.com/wp-cli/builds/gh-pages/phar/wp-cli.phar
          php wp-cli.phar --info
          chmod +x wp-cli.phar
          sudo mv wp-cli.phar /usr/local/bin/wp

      - name: Install WP-CLI i18n command
        run: wp package install wp-cli/i18n-command

      - name: Generate .pot file
        run: |
          wp i18n make-pot . languages/athemes-blocks.pot

      - name: Clean unneeded files
        run: |
          [ -f .gitattributes ] && rm .gitattributes
          [ -d .github ] && rm -r .github
          [ -d .git ] && rm -r .git
          [ -f .gitignore ] && rm .gitignore
          [ -d .cursor ] && rm -r .cursor
          [ -d .packages ] && rm -r .packages
          [ -f phpcs.xml ] && rm phpcs.xml
          [ -f generate-icons-php-files.js ] && rm generate-icons-php-files.js
          [ -f phpdoc.xml ] && rm phpdoc.xml
          [ -f phpstan.neon ] && rm phpstan.neon
          [ -f wpgulp.config.js ] && rm wpgulp.config.js
          [ -f gulpfile.babel.js ] && rm gulpfile.babel.js
          [ -f gulpfile.babel.js ] && rm gulpfile.babel.js
          [ -f composer.json ] && rm composer.json
          [ -f composer.lock ] && rm composer.lock
          [ -f package.json ] && rm package.json
          [ -f package-lock.json ] && rm package-lock.json
          [ -f readme.md ] && rm readme.md
          [ -f playwright.config.js ] && rm playwright.config.js
          [ -d assets/sass ] && rm -r assets/sass
          [ -d assets/js/src ] && rm -r assets/js/src
          [ -d node_modules ] && rm -r node_modules
          [ -d docs ] && rm -r docs
          [ -d dist ] && rm -r dist
          [ -d playwright-report ] && rm -r playwright-report

      - name: Create directory for artifacts
        run: mkdir athemes-blocks

      - name: Move files to athemes blocks directory
        run: rsync -av --progress --exclude=athemes-blocks . athemes-blocks/

      - name: Create Artifact
        run: zip -qq -r "athemes-blocks.zip" athemes-blocks/

      - name: Upload release attachment
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: athemes-blocks.zip
          tag: ${{ github.ref_name }}
          release_name: "aThemes Blocks ${{ github.ref_name }}"
          overwrite: true
          body: "Changelog: https://athemes.com/changelog/athemes-blocks/"