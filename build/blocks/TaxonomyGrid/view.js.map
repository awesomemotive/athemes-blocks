{"version":3,"file":"blocks/TaxonomyGrid/view.js","mappings":";;;;AAAA;AACA,MAAMA,kBAAkB,GAAGC,QAAQ,CAACC,gBAAgB,CAAC,yBAAyB,CAAC;AAE/E,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGH,kBAAkB,CAACI,MAAM,EAAED,CAAC,EAAE,EAAE;EAChD,MAAME,KAAK,GAAGL,kBAAkB,CAACG,CAAC,CAAC;EACnC,MAAMG,QAAQ,GAAGD,KAAK,CAACE,aAAa,CAAC,kCAAkC,CAAC;EAExE,IAAKD,QAAQ,EAAG;IAEZ;IACA,MAAME,aAAa,GAAGC,IAAI,CAACC,KAAK,CAACJ,QAAQ,CAACK,YAAY,CAAC,qBAAqB,CAAC,IAAI,IAAI,CAAC;;IAEtF;IACA,MAAMC,MAAM,GAAG,IAAIC,MAAM,CAACP,QAAQ,EAAEE,aAAa,CAAC;;IAElD;IACA,IAAII,MAAM,CAACE,MAAM,CAACV,MAAM,GAAG,CAAC,IAAII,aAAa,CAACO,UAAU,EAAE;MACtD,MAAMC,aAAa,GAAGX,KAAK,CAACE,aAAa,CAAC,qBAAqB,CAAC;MAChE,MAAMU,aAAa,GAAGZ,KAAK,CAACE,aAAa,CAAC,qBAAqB,CAAC;;MAEhE;MACAS,aAAa,CAACE,YAAY,CAAC,MAAM,EAAE,QAAQ,CAAC;MAC5CF,aAAa,CAACE,YAAY,CAAC,YAAY,EAAE,YAAY,CAAC;MACtDF,aAAa,CAACE,YAAY,CAAC,UAAU,EAAE,GAAG,CAAC;MAE3CD,aAAa,CAACC,YAAY,CAAC,MAAM,EAAE,QAAQ,CAAC;MAC5CD,aAAa,CAACC,YAAY,CAAC,YAAY,EAAE,gBAAgB,CAAC;MAC1DD,aAAa,CAACC,YAAY,CAAC,UAAU,EAAE,GAAG,CAAC;MAE3CF,aAAa,CAACG,gBAAgB,CAAC,OAAO,EAAGC,CAAC,IAAK;QAC3CA,CAAC,CAACC,cAAc,CAAC,CAAC;QAClBT,MAAM,CAACU,SAAS,CAAC,CAAC;MACtB,CAAC,CAAC;MAEFL,aAAa,CAACE,gBAAgB,CAAC,OAAO,EAAGC,CAAC,IAAK;QAC3CA,CAAC,CAACC,cAAc,CAAC,CAAC;QAClBT,MAAM,CAACW,SAAS,CAAC,CAAC;MACtB,CAAC,CAAC;;MAEF;MACAP,aAAa,CAACG,gBAAgB,CAAC,SAAS,EAAGC,CAAC,IAAK;QAC7C,IAAIA,CAAC,CAACI,GAAG,KAAK,OAAO,IAAIJ,CAAC,CAACI,GAAG,KAAK,GAAG,EAAE;UACpCJ,CAAC,CAACC,cAAc,CAAC,CAAC;UAClBT,MAAM,CAACU,SAAS,CAAC,CAAC;QACtB;MACJ,CAAC,CAAC;MAEFL,aAAa,CAACE,gBAAgB,CAAC,SAAS,EAAGC,CAAC,IAAK;QAC7C,IAAIA,CAAC,CAACI,GAAG,KAAK,OAAO,IAAIJ,CAAC,CAACI,GAAG,KAAK,GAAG,EAAE;UACpCJ,CAAC,CAACC,cAAc,CAAC,CAAC;UAClBT,MAAM,CAACW,SAAS,CAAC,CAAC;QACtB;MACJ,CAAC,CAAC;IACN;EACJ;AACJ,C","sources":["webpack://athemes-blocks/./assets/js/src/blocks/TaxonomyGrid/view.js"],"sourcesContent":["// Get all post grid blocks on the page\nconst taxonomyGridBlocks = document.querySelectorAll('.at-block-taxonomy-grid');\n\nfor (let i = 0; i < taxonomyGridBlocks.length; i++) {\n    const block = taxonomyGridBlocks[i];\n    const swiperEl = block.querySelector('.at-block-swiper-wrapper .swiper');\n\n    if ( swiperEl ) {\n        \n        // Get the swiper options from the data attribute\n        const swiperOptions = JSON.parse(swiperEl.getAttribute('data-swiper-options') || '{}');\n\n        // Initialize Swiper with the options\n        const swiper = new Swiper(swiperEl, swiperOptions);\n\n        // Custom Navigation.\n        if (swiper.slides.length > 1 && swiperOptions.navigation) {\n            const nextNavButton = block.querySelector('.at-block-nav--next');\n            const prevNavButton = block.querySelector('.at-block-nav--prev');\n\n            // Add accessibility attributes to navigation buttons\n            nextNavButton.setAttribute('role', 'button');\n            nextNavButton.setAttribute('aria-label', 'Next slide');\n            nextNavButton.setAttribute('tabindex', '0');\n\n            prevNavButton.setAttribute('role', 'button');\n            prevNavButton.setAttribute('aria-label', 'Previous slide');\n            prevNavButton.setAttribute('tabindex', '0');\n\n            nextNavButton.addEventListener('click', (e) => {\n                e.preventDefault();\n                swiper.slideNext();\n            });\n\n            prevNavButton.addEventListener('click', (e) => {\n                e.preventDefault();\n                swiper.slidePrev();\n            });\n\n            // Add keyboard navigation support\n            nextNavButton.addEventListener('keydown', (e) => {\n                if (e.key === 'Enter' || e.key === ' ') {\n                    e.preventDefault();\n                    swiper.slideNext();\n                }\n            });\n\n            prevNavButton.addEventListener('keydown', (e) => {\n                if (e.key === 'Enter' || e.key === ' ') {\n                    e.preventDefault();\n                    swiper.slidePrev();\n                }\n            });\n        }\n    }\n}"],"names":["taxonomyGridBlocks","document","querySelectorAll","i","length","block","swiperEl","querySelector","swiperOptions","JSON","parse","getAttribute","swiper","Swiper","slides","navigation","nextNavButton","prevNavButton","setAttribute","addEventListener","e","preventDefault","slideNext","slidePrev","key"],"sourceRoot":""}